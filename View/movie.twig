{% extends 'layout.twig' %}
{% import 'form.twig' as form %}


{% block content %}
    <div class="jumbotron">
        <div class="container">
            <h1>{{ movie.title }}</h1>
        </div>
        <div class="container">
            <figure class="">
                {% if movie.poster_path  %}
                    <img src='http://image.tmdb.org/t/p/w185{{ movie.poster_path }}' alt="{{ movies.title }} poster">
                {% else %}
                    <img style="width : 185px; height : 278px;" src='{{ app.basepath }}Public/img/no_poster.png' alt="Poster not found">
                {% endif %}
                <figcaption></figcaption>
            </figure>
            <div>
                <table>
                    <tbody>
                        <tr>
                            <td>Titre original : </td>
                            <td> {{ movie.original_title }} </td>
                        </tr>
                        <tr>
                            <td>Date de sortie : </td>
                            <td> {{ movie.release_date }}</td>
                        </tr>
                        <tr>
                            <td>Statut :</td>
                            <td> {{ movie.status }} </td>
                        </tr>
                        <tr>
                            <td>Langue originale : </td>
                            <td>
                                {% for language in movie.spoken_languages %}
                                    {{ language.name }},
                                {% endfor %}
                            </td>
                        </tr>
                        <tr>
                            <td>Genre :</td>
                            <td>
                                {% for genre in movie.genres %}
                                    {{ genre.name }},
                                {% endfor %}
                            </td>
                        </tr>
                        <tr>
                            <td>Synopsis : </td>
                            <td> {{ movie.overview }} </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

        <div id="search_results" class="container">
            {% if category is null %}
            {# AFficher la liste des catégorie associée à ce film si il y en a #}
                <h2>Liste des catégories associées à ce film</h2>
            {% else %}
            {# Dans le cas ou une catégorie est déjà selectionnée, afficher les commentaires concernant ce film pour cette catégorie#}
                <h2>Commentaires justifiant du classement de ce film dans la catégorie "{{ category }}"</h2>
                <div class="comments_list">
                    {% if mcuList is iterable %}
                        {% for MCUConnection in mcuList %}
                            {% if MCUConnection.justificationComment is not null %}
                                <div class="comment_elt">
                                    <span><a href=""><i class="far fa-fw fa-user"></i>{{ MCUConnection.pseudo }}</a> - {{ MCUConnection.creationDate }} </span>
                                    <p class="text_comment"> {{ MCUConnection.justificationComment }} </p>
                                    <p> valeur de isAdmin : {{ app.isAdmin }} </p>
                                    {% if app.isAdmin == true %}
                                        <button class="btn nwl_suprimer " data-id="{{ MCUConnection.id }}" title="Supprimer ce commentaire"><i class="fas fa-dumpster-fire"></i></button>
                                    {% else %}
                                        <button class="nwl_report" data-id="{{ MCUConnection.id }}" title="Signaler ce commentaire">Signaler</button>
                                    {% endif %}
    {#                                <i class="fas fa-dumpster-fire"></i>#}
                                </div>
{#                                <form method="POST" action="{{ app.basepath }}adminActionComment">#}
{#                                    <input name="id" type="hidden" value="{{ MCUConnection.id }}">#}
{#                                    <input name="commentAction" type="hidden" value="delete">#}
{#                                    <button class="btn nwl_suprimer " type="submit"  title="Supprimer ce commentaire"><i class="fas fa-dumpster-fire"></i></button>#}
{#                                </form>#}
                            {% endif %}
                        {% endfor %}
                    {% else %}
                        {# users is probably a string #}
                        {{ mcuList }}
                    {% endif %}
                </div>
            {% endif %}
        </div>



{% endblock %}

{% block javascripts %}

    <script>
        $(document).ready(function(){
            var allButtons = $('button[class^=btn]');

            // On abonne chaque bouton à un evt click
            for (var i = 0; i < allButtons.length; i++) {
                allButtons[i].addEventListener('click', function() {
                    if(this.classList.contains("nwl_suprimer")){
                        if ( confirm( "Êtes-vous sur-e de vouloir supprimer ce message?" ) ) {
                            // Code à éxécuter si le l'utilisateur clique sur "OK"
                            adminActionComment(this.getAttribute("data-id"), 'delete');
                            commentElt = $(this).parents(".comment_elt");
                            commentEltParent = commentElt[0].parentNode;
                            commentEltParent.removeChild(commentElt[0]);
                        }
                    }
                });
            }

            function adminActionComment(commentId, action){ // actions administrateur
                var xhr = new XMLHttpRequest();
                let formData = new FormData();
                formData.append("commentAction", action);
                formData.append("id", commentId);
                xhr.open('POST','{{ app.basepath }}adminActionComment' );
                xhr.addEventListener('readystatechange', function() { // On gère ici une requête asynchrone
                    if (xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) { // Si le fichier est chargé sans erreur
                        let response = JSON.parse(xhr.response);
                        if(response.result == 1){
                            let response = JSON.parse(xhr.response);
                            console.log(response);
                        }else if(response.result == 0) {
                            alert('le  commentaire d\'id : ' + commentId + ', n\'a PAS été ' + action);
                        }
                    }
                });
                xhr.send(formData);
            }


        });
    </script>


{% endblock %}